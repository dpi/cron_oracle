<?php

/**
 * Implements hook_cron().
 */
function cron_oracle_cron() {
  // Cron records history length.
  $max_lifetime = 60 * 60 * 24 * 14;
  $max_data_points = 128;
  $history = \Drupal::state()->get('cron_oracle_history', []);

  // Add this time.
  $history[] = REQUEST_TIME;

  // Purge old times
  foreach ($history as $key => $time) {
    if ($time < (REQUEST_TIME - $max_lifetime)) {
      unset($history[$key]);
    }
  }

  // Remove excessive times
  rsort($history);
  $history = array_slice($history, 0, $max_data_points);

  \Drupal::state()->set('cron_oracle_history', $history);
}

/**
 * Calculate estimated seconds until next cron run.
 *
 * @return int|NULL
 *   Estimated seconds until next cron run. Or NULL if unknown.
 */
function cron_oracle_predict() {
  $history = \Drupal::state()->get('cron_oracle_history', []);

  sort($history);
  $history[] = REQUEST_TIME;

  $differences = [];
  foreach ($history as $key => $time) {
    if ($key) {
      $differences[] = $time - $history[$key - 1];
    }
  }

  if (count($history) > 0) {
    // Calculate average
    return ceil(array_sum($differences) / count($history));
  }

  return NULL;
}
